{"version":3,"sources":["webpack://yak-engine/webpack/universalModuleDefinition","webpack://yak-engine/webpack/bootstrap","webpack://yak-engine/./src/lib/scene/components.ts","webpack://yak-engine/./src/lib/primitives/point.ts","webpack://yak-engine/./src/lib/core/manager-factory.ts","webpack://yak-engine/./src/lib/logging/logger.ts","webpack://yak-engine/./src/lib/primitives/transform.ts","webpack://yak-engine/./src/lib/core/time.ts","webpack://yak-engine/./src/lib/graphics/camera.ts","webpack://yak-engine/./src/lib/scene/entity.ts","webpack://yak-engine/./src/lib/core/configuration.ts","webpack://yak-engine/./src/lib/systems/system.ts","webpack://yak-engine/./src/lib/graphics/renderer/base-renderer.ts","webpack://yak-engine/./src/lib/core/scene-manager.ts","webpack://yak-engine/./src/lib/core/entity-manager.ts","webpack://yak-engine/./src/lib/core/component-manager.ts","webpack://yak-engine/./src/lib/graphics/tileset.ts","webpack://yak-engine/./src/lib/models/returns/load-scene-return.ts","webpack://yak-engine/./src/lib/core/system-manager.ts","webpack://yak-engine/./src/lib/systems/collision/collision-system.ts","webpack://yak-engine/./src/lib/systems/collision/collision-direction.ts","webpack://yak-engine/./src/lib/systems/script/ScriptSystem.ts","webpack://yak-engine/./src/lib/graphics/renderer/webgl-renderer.ts","webpack://yak-engine/./src/lib/graphics/Mat4.ts","webpack://yak-engine/./src/lib/graphics/renderer/canvas-renderer.ts","webpack://yak-engine/./src/lib/helpers/is-coordinate-contained.ts","webpack://yak-engine/./src/lib/physics/collision/collider.ts","webpack://yak-engine/./src/public-api.ts","webpack://yak-engine/./src/lib/core/application.ts","webpack://yak-engine/./src/lib/core/constants.ts","webpack://yak-engine/./src/lib/graphics/input.ts","webpack://yak-engine/./src/lib/graphics/layer.ts","webpack://yak-engine/./src/lib/graphics/Mat3.ts","webpack://yak-engine/./src/lib/graphics/mouse.ts","webpack://yak-engine/./src/lib/graphics/sprite.ts","webpack://yak-engine/./src/lib/helpers/are-transforms-equal.ts","webpack://yak-engine/./src/lib/helpers/are-transforms-overlapping.ts","webpack://yak-engine/./src/lib/helpers/current-viewport-grid-square.ts","webpack://yak-engine/./src/lib/helpers/is-canvas-empty.ts","webpack://yak-engine/./src/lib/helpers/is-transform-empty.ts","webpack://yak-engine/./src/lib/helpers/screen-to-world.ts","webpack://yak-engine/./src/lib/helpers/world-to-screen.ts","webpack://yak-engine/./src/lib/physics/collision/square-collider.ts","webpack://yak-engine/./src/lib/physics/physics.ts","webpack://yak-engine/./src/lib/scene/manifest.ts","webpack://yak-engine/./src/lib/scene/scene.ts","webpack://yak-engine/./src/lib/state/state-manager.ts","webpack://yak-engine/./src/lib/systems/script/ScriptableEntity.ts"],"names":[],"mappings":"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AAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAEvB,OAAO;YACL,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;YAC7C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAA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","file":"yak-engine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"yak-engine\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"yak-engine\"] = factory();\n\telse\n\t\troot[\"yak-engine\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","import { Camera } from \"../graphics/camera\";\r\nimport { Point } from '../primitives/point'\r\nimport { Transform } from '../primitives/transform'\r\n\r\nexport class CameraComponent {\r\n    constructor(public camera?: Camera) {\r\n \r\n    }\r\n}\r\n\r\nexport class ColliderComponent {\r\n    private _points: Array<Point> = new Array();\r\n\r\n    /**\r\n     * \r\n     * @param transform \r\n     * @param isTrigger \r\n     */\r\n    constructor(\r\n        public transform: Transform, \r\n        public isTrigger?: boolean) {\r\n\r\n        // Top left.\r\n        this._points.push(new Point(transform.x, transform.y));\r\n\r\n        // Top right.\r\n        this._points.push(new Point(transform.x + transform.width, transform.y));\r\n\r\n        // Bottom left.\r\n        this._points.push(new Point(transform.x, transform.y + transform.height));\r\n\r\n        // Bottom right.\r\n        this._points.push(new Point(transform.x + transform.width, transform.y + transform.height));\r\n    }\r\n}\r\n\r\nexport class ImageComponent {\r\n    /**\r\n     * The path of the image loaded into the component.\r\n     */\r\n    public source?: string;\r\n}\r\n\r\nexport class MaterialComponent {\r\n    /**\r\n     * The fill color for the entity i.e (#ffffff).\r\n     * \r\n     * @example\r\n     * fillStyle = '#ffffff';\r\n     */\r\n    public fillStyle?: string;\r\n\r\n    /**\r\n     * The alpha (opacity) of the entity.\r\n     * \r\n     * @remarks\r\n     * The alpha can be set between 0 and 1.\r\n     * \r\n     * @example\r\n     * alpha = 1;\r\n     */\r\n    public alpha: number = 1;\r\n}\r\n\r\nexport class ScriptComponent  {\r\n    constructor(public scritableEntity?: any) {\r\n\r\n    }\r\n\r\n    public instance!: any; //ScriptableEntity;\r\n}\r\n\r\nexport class SpriteRendererComponent {\r\n    public layer!: number;\r\n\r\n    public tilesetIndex!: number;\r\n\r\n    public row?: number;\r\n\r\n    public column?: number;\r\n}\r\n\r\nexport class TagComponent {\r\n    constructor(\r\n        public name?: string\r\n    ) {\r\n        \r\n    }\r\n}\r\n\r\nexport class TilemapComponent {\r\n    public layer: number = 0;\r\n\r\n    public tilesetIndex: number = 0;\r\n\r\n    public tiles: number[] = [];\r\n}\r\n\r\nexport class TransformComponent {\r\n    constructor(public transform: Transform) {\r\n        \r\n    }\r\n}","export class Point {\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public x: number;\r\n    public y: number;\r\n}","\r\n// Bulk scene/manager imports.\r\nimport { TagComponent } from '../scene/components';\r\nimport { TransformComponent } from '../scene/components';\r\nimport { SpriteRendererComponent } from '../scene/components';\r\nimport { MaterialComponent } from '../scene/components';\r\nimport { ColliderComponent } from '../scene/components';\r\nimport { CameraComponent } from '../scene/components';\r\nimport { ImageComponent } from '../scene/components';\r\nimport { ScriptComponent } from '../scene/components';\r\nimport { TilemapComponent } from '../scene/components';\r\nimport { ComponentManager } from './component-manager';\r\n\r\nexport class ManagerFactory {\r\n    public static managers: Map<any, any> = new Map();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public static bootstrap(): void {\r\n        ManagerFactory.register(TagComponent.name, new ComponentManager<TagComponent>());\r\n        ManagerFactory.register(TransformComponent.name, new ComponentManager<TransformComponent>());\r\n        ManagerFactory.register(CameraComponent.name, new ComponentManager<CameraComponent>());\r\n        ManagerFactory.register(MaterialComponent.name, new ComponentManager<MaterialComponent>());\r\n        ManagerFactory.register(SpriteRendererComponent.name, new ComponentManager<SpriteRendererComponent>());\r\n        ManagerFactory.register(ColliderComponent.name, new ComponentManager<ColliderComponent>());\r\n        ManagerFactory.register(ImageComponent.name, new ComponentManager<ImageComponent>());\r\n        ManagerFactory.register(ScriptComponent.name, new ComponentManager<ScriptComponent>());\r\n        ManagerFactory.register(TilemapComponent.name, new ComponentManager<TilemapComponent>());\r\n    }\r\n\r\n    // TODO: Add type contraints.\r\n    public static register(componentName: string, componentManagerInstance: any): void {\r\n        if (!ManagerFactory.managers.has(componentName)) {\r\n            ManagerFactory.managers.set(componentName, componentManagerInstance);\r\n        }\r\n    }\r\n\r\n    public static get<TComponentManager>(componentName: string): TComponentManager {\r\n        console.log(componentName);\r\n\r\n        if (ManagerFactory.managers.has(componentName)) {\r\n            return ManagerFactory.managers.get(componentName);\r\n        }\r\n\r\n        throw `Manager has not been registered: ${componentName}`;\r\n    }\r\n\r\n    public static log(): void {\r\n        ManagerFactory.managers.forEach((manager) => console.log(manager));\r\n    }\r\n}","export enum LogThreshold {\r\n    NONE = 0,\r\n    DATA = 1,\r\n    DEBUG = 2,\r\n    INFO = 3,\r\n    ERROR = 4,\r\n    CRITICAL = 5\r\n}\r\n\r\nexport class Logger {\r\n    static thresholds: LogThreshold[] = [LogThreshold.DATA, LogThreshold.DEBUG, LogThreshold.INFO, LogThreshold.ERROR, LogThreshold.CRITICAL];\r\n\r\n    static debug(msg: string): void {\r\n        if (!this.thresholds.includes(LogThreshold.DEBUG)) {\r\n            return;\r\n        }\r\n\r\n        console.log(`[YAK DEBUG]: ${msg}`);\r\n    }\r\n\r\n    static info(msg: string, source: string): void {\r\n        if (!this.thresholds.includes(LogThreshold.INFO)) {\r\n            return;\r\n        }\r\n\r\n        console.info(`%c [YAK INFO - ${source}]: ${msg}`, 'background: #222; color: #bada55');\r\n    }\r\n\r\n    static error(msg: string): void {\r\n        if (!this.thresholds.includes(LogThreshold.ERROR)) {\r\n            return;\r\n        }\r\n\r\n        console.error(`[YAK ERROR]: ${msg}`);\r\n    }\r\n\r\n    static critical(msg: string): void {\r\n        if (!this.thresholds.includes(LogThreshold.CRITICAL)) {\r\n            return;\r\n        }\r\n\r\n        console.error(`[YAK CRITICAL]: ${msg}`);\r\n    }\r\n\r\n    static data(msg: string, data: any): void {\r\n        if (!this.thresholds.includes(LogThreshold.DATA)) {\r\n            return;\r\n        }\r\n\r\n        console.log(`%c [YAK DATA]: ${msg}`, 'background: #222; color: #bada55', data);\r\n    }\r\n}","import { Camera } from '../graphics/camera';\r\n\r\nexport class Transform {\r\n    x: number;\r\n    y: number;\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor(x: number, y: number, width: number, height: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    getScreenX(camera: Camera): number {\r\n        return this.x - camera.viewport.x;\r\n    }\r\n\r\n    // clampX(min: number, maxLowerRange: number, maxUpperRange: number): void {\r\n    //     this.x = Math.max(min, Math.min(maxLowerRange, maxUpperRange));  \r\n    // }\r\n\r\n    clampX(min: number, max: number): boolean {\r\n        if (this.x < min) {\r\n            this.x = min;\r\n            return true;\r\n        }\r\n\r\n        if (this.x > max) {\r\n            this.x = max;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clampY(min: number, max: number): boolean {\r\n        if (this.y <= min) {\r\n            this.y = min;\r\n            return true;\r\n        }\r\n\r\n        if (this.y >= max) {\r\n            this.y = max;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    offsetX(): number {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    offsetY(): number {\r\n        return this.y + this.height;\r\n    }\r\n\r\n    lerp(startValue: number, endValue: number, amount: number): number {\r\n        amount = amount < 0 ? 0 : amount;\r\n        amount = amount > 1 ? 1 : amount;\r\n\r\n        return startValue + (endValue - startValue) * amount;\r\n    }\r\n\r\n    /**\r\n     * Returns a new empty transform object. Meaning the x, y, width, and height\r\n     * values are all zero.\r\n     * \r\n     * @author NSSure\r\n     * @since 11/12/2020\r\n     */\r\n    static get empty(): Transform {\r\n        return new Transform(0, 0, 0, 0);\r\n    }\r\n}","export class Time {\r\n    public static lastTimestamp: number = performance.now();\r\n    public static deltaTime: any;\r\n    public static fps: number;\r\n\r\n    public static calculateDeltaTime(time: number): void {\r\n        if(!Time.lastTimestamp) {\r\n            Time.lastTimestamp = time;\r\n            Time.fps = 0;\r\n            return;\r\n         }\r\n\r\n         Time.deltaTime = (time - Time.lastTimestamp)/1000;\r\n         Time.lastTimestamp = time;\r\n         Time.fps = 1/ Time.deltaTime;\r\n    }\r\n}","import { Point } from '../primitives/point';\r\nimport { Transform } from '../primitives/transform';\r\n\r\nexport class Camera {\r\n    /**\r\n     * Stored in world coordinates.\r\n     */\r\n    public viewport!: Transform;\r\n\r\n    /**\r\n     * Stored in world coordinates.\r\n     */\r\n    public max!: Point;\r\n\r\n    orthographicSize: number = 5;\r\n\r\n    isClampedX(): boolean {\r\n        if (this.viewport.x >= this.max.x / 2 || this.viewport.x === 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isClampedY(): boolean {\r\n        if (this.viewport.y >= this.max.y / 2 || this.viewport.y === 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    update(): void {\r\n        \r\n    }\r\n}","import { ManagerFactory } from '../core/manager-factory';\r\nimport { ScriptComponent } from '../scene/components';\r\n\r\n/**\r\n * Base object class used for sprites, colliders, primitives, etc. Contains\r\n * shared code common across most classes.\r\n * \r\n * @author NSSure\r\n * @since 11/8/2020\r\n */\r\nexport class Entity {\r\n    /**\r\n     * Generates a unique 12 character ID for each entity.\r\n     */\r\n    // id: string = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 12);\r\n    id: string = ''; // Refactored to number for ECS.\r\n\r\n    /**\r\n     * The name of the entity.\r\n     */\r\n    public name?: string;\r\n\r\n    /**\r\n     * Determines if the entity should be rendered.\r\n     */\r\n    enabled: boolean = true;\r\n\r\n    public addComponent<TComponent>(componentInstance: TComponent): void {\r\n        let manager = ManagerFactory.get((<any>componentInstance).constructor.name) as any;\r\n        manager.addComponentInstance(this, componentInstance);\r\n    }\r\n\r\n    public getComponent<TComponent>(componentType: any): TComponent {\r\n        // if (componentType.name === ScriptComponent.name) {\r\n        //     console.log(componentType.name);\r\n        //     throw \"Getting script components is not currently supported.\";\r\n        // }\r\n        \r\n        let manager = ManagerFactory.get(componentType.name);\r\n        return (<any>manager).instances[(<any>manager).map[this.id]] as TComponent;\r\n    }\r\n\r\n    public getScriptInstances(): ScriptComponent[] {\r\n        // let scriptManager = ManagerFactory.get(ScriptComponent.name) as ScriptComponentManager;\r\n\r\n        // if (scriptManager.map.has(this.id)) {\r\n        //     console.log(scriptManager.instances.filter(x => scriptManager.map.get(this.id).includes(x.id)));\r\n        //     // TODO: This will not work for script components.\r\n        //     return scriptManager.instances.filter(x => scriptManager.map.get(this.id).includes(x.id)) as ScriptComponent[];\r\n        // }\r\n\r\n        return [];\r\n    }\r\n\r\n    // public removeComponent(componentName: string): void {\r\n    //     let manager = ManagerFactory.get(componentName);\r\n\r\n    //     if (manager.entityDataMap.has(this.id)) {\r\n    //         let componentInstanceId: number = manager.entityDataMap.get(this.id);\r\n    //         manager.data.splice(manager.data.findIndex(x => x.id === componentInstanceId), 1);\r\n    //         manager.entityDataMap.delete(this.id);\r\n    //         manager.dataEntityMap.delete(componentInstanceId);\r\n    //     }\r\n\r\n    //     console.log(manager);\r\n    // }\r\n}","import { Manifest } from '../scene/manifest';\r\n\r\n/**\r\n * Contains configuration options for the application instance.\r\n * \r\n * @author NSSure\r\n * @since 11/8/2020\r\n */\r\nexport class Configuration {\r\n    /**\r\n     * Loaded resource.\r\n     */\r\n    public static engineConfig: Manifest | null = null;\r\n\r\n    public static width: number;\r\n\r\n    public static height: number;\r\n\r\n    public static baseUrl: string;\r\n\r\n    /**\r\n     * Default size of the squares of the canvas.\r\n     */\r\n    public static gridSquareSize: number = 32;\r\n\r\n    /**\r\n     * The background fill that immediately fill the canvas area after the clearCanvas method to called in the draw method.\r\n     */\r\n    public static canvasFill: string = '#181818';\r\n\r\n    /**\r\n     * When in selection mode this is the fill color of the selected area.\r\n     */\r\n    public static selectionTransformFill: string = 'rgba(252,248,227, 0.7)';\r\n}","import { Entity } from '../scene/entity';\r\n\r\nexport abstract class System {\r\n    /**\r\n     * The name of the system.\r\n     */\r\n    abstract name: string;\r\n\r\n    /**\r\n     * test\r\n     * @param entity test\r\n     */\r\n    abstract dispose(entity: Entity): void;\r\n}","import { Scene } from '../../scene/scene';\r\nimport { Tileset } from '../../graphics/tileset';\r\n\r\nexport abstract class BaseRenderer {\r\n    /**\r\n     * The canvas to render the current scene to.\r\n     */\r\n    public abstract engineCanvas: HTMLCanvasElement;\r\n\r\n    /**\r\n     * The current scene to render.\r\n     */\r\n    public abstract scene: Scene;\r\n\r\n    /**\r\n     * The tilesets to use for the current scene.\r\n     */\r\n    public abstract tilesets: Tileset[];\r\n\r\n    /**\r\n     * Called when the application loads.\r\n     */\r\n    abstract init(): void;\r\n\r\n    /**\r\n     * Draws to the renderer.\r\n     */\r\n    abstract draw(): void;\r\n}","import { EntityManager } from '../core/entity-manager';\r\nimport { Tileset } from '../graphics/tileset';\r\nimport { Scene } from '../scene/scene';\r\nimport { LoadSceneReturn } from '../models/returns/load-scene-return';\r\nimport { Logger } from '../logging/logger';\r\n\r\nexport class SceneManager {\r\n\tpublic static async load(sceneName: string, baseUrl: string = ''): Promise<LoadSceneReturn> {\r\n\t\tLogger.info('Started loading scene.', SceneManager.name);\r\n\r\n\t\tlet scenePath: string = `${sceneName}.json`;\r\n\r\n\t\tif (baseUrl) {\r\n\t\t\tscenePath = `${baseUrl}\\\\${scenePath}`;\r\n\t\t}\r\n\r\n\t\tlet response = await fetch(scenePath);\r\n\t\tlet scene: Scene = await response.json();\r\n\r\n\t\tLogger.info('Scene loaded and parsed successfully', SceneManager.name);\r\n\r\n\t\t// Parsed entities to typescript objects.\r\n\t\tEntityManager.getInstance().unpackEntityManifests(scene);\r\n\t\t\r\n\t\tlet tilesets: Array<Tileset> = new Array();\r\n\r\n\t\tfor (let tilesetName of scene.tilesets) {\r\n\t\t\tlet tilesetImage = new Image();\r\n\r\n\t\t\tlet tilesetPath: string = `${baseUrl}/tilesets/${tilesetName}`;\r\n\r\n\t\t\t// if (Configuration.baseUrl) {\r\n\t\t\t// \ttilesetPath = `file://${Configuration.baseUrl.replace(/\\\\/g, \"/\")}/${tilesetPath}`;\r\n            // }\r\n\r\n\t\t\ttilesetImage.src = tilesetPath;\r\n\r\n\t\t\tawait tilesetImage.decode();\r\n\r\n\t\t\ttilesets.push(new Tileset(tilesetImage));\r\n\r\n\t\t\tLogger.info(`Scene tileset ${tilesetName} loaded`, SceneManager.name);\r\n\t\t}\r\n\r\n\t\tLogger.info('Finished loading scene', SceneManager.name);\r\n\r\n\t\treturn new LoadSceneReturn(scene, tilesets);\r\n\t}\r\n}\r\n","import { ManagerFactory } from '../core/manager-factory';\r\nimport { Camera } from '../graphics/camera';\r\nimport { Entity } from '../scene/entity';\r\nimport { Scene } from '../scene/scene';\r\nimport { Point } from '../primitives/point';\r\nimport { Transform } from '../primitives/transform';\r\nimport { Logger } from '../logging/logger';\r\n\r\n// Bulk components/manager imports.\r\nimport { TagComponent } from '../scene/components';\r\nimport { TransformComponent } from '../scene/components';\r\nimport { ColliderComponent } from '../scene/components';\r\nimport { CameraComponent } from '../scene/components';\r\n\r\nexport class EntityManager {\r\n    private static characters: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    private static instance: EntityManager;\r\n\r\n    public static getInstance(): EntityManager {\r\n        if (!EntityManager.instance) {\r\n            EntityManager.instance = new EntityManager();\r\n        }\r\n\r\n        return EntityManager.instance;\r\n    }\r\n\r\n    public entities: Entity[] = [];\r\n\r\n    /**\r\n     * Creates a new entity and stores it within the entity manager.\r\n     * @returns The newly created entity populated with the required components.\r\n     */\r\n    public create(): Entity {\r\n        let entity: Entity = new Entity();\r\n\r\n        this.entities.push(entity);\r\n        \r\n        var id: string = '';\r\n\r\n        for (var i = 0; i < 8; i++) {\r\n            var characterIndex = Math.floor(Math.random() * EntityManager.characters.length);\r\n            id += EntityManager.characters.substring(characterIndex, characterIndex + 1);\r\n        }\r\n        \r\n        entity.id = id;\r\n\r\n        // Add the required components to the entity.\r\n        entity.addComponent(new TagComponent(`entity${entity.id}`));\r\n        entity.addComponent(new TransformComponent(Transform.empty));\r\n\r\n        return entity;\r\n    }\r\n\r\n    /**\r\n     * Disposes of the given entity along with any references within any component manager or systems.\r\n     * \r\n     * @param entity The entity to dispose of.\r\n     */\r\n    public dispose(entity: Entity): void {\r\n        let index = this.entities.findIndex(x => x.id === entity.id);\r\n\r\n        if (index !== -1) {\r\n            // Remove all references stored in each of the component manager instances.\r\n            // ManagerFactory.managers.forEach((manager: ComponentM) => manager.dispose(entity));\r\n            // SystemManager.systems.forEach((system: System) => system.dispose(entity));\r\n\r\n            this.entities.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads the entities.\r\n     * @param sceneConfig \r\n     */\r\n    public unpackEntityManifests(sceneConfig: Scene): void {\r\n        let parsedEntities: Entity[] = [];\r\n\r\n        // Bootstrap entities.\r\n        sceneConfig.entityManifests.forEach((entityManifest: any) => {\r\n            let entity = new Entity();\r\n\r\n            entity.id = entityManifest.id;\r\n            entity.enabled = entityManifest.enabled;\r\n\r\n            for(let sourceProperty in entityManifest) {\r\n                let sourceComponent = entityManifest[sourceProperty];\r\n\r\n                if (sourceComponent) {\r\n                    if (sourceProperty === 'spriteRendererComponent') {\r\n                        entity.addComponent({\r\n                            layer: sourceComponent.layer, \r\n                            tileset: sourceComponent.tileset, \r\n                            row: sourceComponent.row, \r\n                            column: sourceComponent.column\r\n                        });\r\n                    }\r\n                    else if (sourceProperty === 'transformComponent') {\r\n                        entity.addComponent(new TransformComponent(new Transform(sourceComponent.x, sourceComponent.y, sourceComponent.width, sourceComponent.height)));\r\n                    }\r\n                    else if (sourceProperty === 'cameraComponent') {\r\n                        let camera: Camera = new Camera();\r\n\r\n                        camera.viewport = new Transform(sourceComponent.camera.viewport.x, sourceComponent.camera.viewport.y, sourceComponent.camera.viewport.width, sourceComponent.camera.viewport.height);\r\n                        camera.max = new Point(sourceComponent.camera.max.x, sourceComponent.camera.max.y);\r\n\r\n                        entity.addComponent(new CameraComponent(camera));\r\n                    }\r\n                    else if (sourceProperty === 'tagComponent') {\r\n                        entity.addComponent(new TagComponent(sourceComponent.name));\r\n                    }\r\n                    else if (sourceProperty === 'colliderComponent') {\r\n                        entity.addComponent(new ColliderComponent(sourceComponent.transform, sourceComponent.isTrigger));\r\n                    }\r\n                }\r\n            }\r\n\r\n            Logger.info(`Scene entity ${entityManifest.id} parsed`, EntityManager.name);\r\n\r\n            parsedEntities.push(entity);\r\n        });\r\n\r\n        EntityManager.getInstance().entities = parsedEntities;\r\n\r\n        // console.log(EntityManager.getInstance().entities[0].getComponent<TagComponent>(TagComponent));\r\n\r\n        Logger.info(`Finished parsing ${parsedEntities.length} entities`, EntityManager.name);\r\n    }\r\n\r\n    /**\r\n     * TODO: Move to the editor.\r\n     * \r\n     * Packs the entities within each component manager into a single array for saving to the scene json file.\r\n     * @returns The list of packed entities.\r\n     */\r\n    public packEntities(): any[] { // EntityManifest\r\n        // let entityConfigs: Entity[] = [];\r\n\r\n        // EntityManager.getInstance().entities.forEach((entity) => {\r\n        //     let entityConfig: any = {};\r\n\r\n        //     Constants.componentTypes.forEach((componentType) => {\r\n        //         let componentInstance: Component = entity.getComponent(componentType);\r\n\r\n        //         if (componentInstance) {\r\n        //             entityConfig[componentType.name.charAt(0).toLowerCase() + componentType.name.slice(1)] = componentInstance;\r\n        //         }\r\n        //     });\r\n\r\n        //     if (Object.keys(entityConfig).length !== 0 && entityConfig.constructor === Object) {\r\n        //         entityConfigs.push(entityConfig);\r\n        //     }\r\n        // });\r\n\r\n        // return entityConfigs;\r\n\r\n        return [];\r\n    }\r\n\r\n    public getComponents(entity: Entity): any[] {\r\n        let components: any[] = [];\r\n\r\n        ManagerFactory.managers.forEach((manager) => {\r\n            if (manager.map[entity.id]) {\r\n                components.push(manager.instances[manager.map[entity.id]])\r\n            }\r\n        });\r\n\r\n        return components;\r\n    }\r\n}","import { Entity } from '../scene/entity';\r\nimport { ScriptComponent } from '../scene/components';\r\n\r\ninterface EntityComponentMap {\r\n    [entityId: string]: number;\r\n}\r\n\r\nexport class ComponentManager<TComponent> {\r\n    /**\r\n     * The component instance for the specific manager that inherits the component manager. For example\r\n     * if the TagComponentManager is the inherting then this will contain all of the tag component instances.\r\n     */\r\n    instances: TComponent[] = [];\r\n\r\n    /**\r\n     * The component instance for the specific manager that inherits the component manager. For example\r\n     * if the TagComponentManager is the inherting then this will contain all of the tag component instances.\r\n     */\r\n    entities: Entity[] = [];\r\n\r\n    /**\r\n     * Contains a map between the id of an entity and all its associated component types.\r\n     */\r\n    map: EntityComponentMap = {};\r\n\r\n    /**\r\n     * Trys to add the instance of a component to an entity. If the component already exists for the entity and exception will be thrown.\r\n     * Note that the entities may have multiple instances of the script component.\r\n     * @param entity The entity to associated the component instance with.\r\n     * @param componentInstance The component instance to associate with the entity.\r\n     */\r\n    addComponentInstance(entity: Entity, componentInstance: TComponent): void {\r\n        if (this.map[entity.id]) {\r\n            // Entities are allowed to have multiple script component instances so the duplicate component check does not apply to instances of the script type.\r\n            if (typeof componentInstance !== typeof ScriptComponent) {\r\n                console.error(componentInstance);\r\n                throw `[${(<any>componentInstance).constructor.name}]: You can't not have multiple component of the same type on entity unless that component is a script.`;\r\n            }\r\n        }\r\n        else {\r\n            this.entities.push(entity);\r\n        }\r\n\r\n        // Store the component instance within the current manager.\r\n        this.instances.push(componentInstance);\r\n        this.map[entity.id] = this.instances.length - 1;\r\n    }\r\n\r\n    getInstance(entity: Entity): TComponent | null {\r\n        let index = this.map[entity.id];\r\n\r\n        if (index || index === 0) {\r\n            return this.instances[index];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Dispose of the entity reference and any related data. Called when an entity is destroyed.\r\n     * @param entity The entity to dispose of the references for.\r\n     */\r\n    public dispose(entity: Entity): void {\r\n        if (this.constructor.name === 'ScriptComponentManager') {\r\n            console.log(this);\r\n        }\r\n\r\n        if (this.map[entity.id]) {\r\n            this.instances.splice(this.map[entity.id]);\r\n\r\n            delete this.map[entity.id];\r\n            \r\n            let entityIndex: number = this.entities.findIndex(x => x.id === entity.id);\r\n\r\n            if (entityIndex !== -1) {\r\n                this.entities.splice(entityIndex, 1);\r\n            }\r\n\r\n            console.log(this);\r\n        }\r\n    }\r\n}","export class Tileset {\r\n    constructor(public image?: HTMLImageElement) {\r\n        \r\n    }\r\n}","import { Tileset } from '../../graphics/tileset';\r\nimport { Scene } from '../../scene/scene';\r\n\r\nexport class LoadSceneReturn {\r\n    public scene: Scene;\r\n    public tilesets: Array<Tileset> = new Array();\r\n    \r\n    constructor(scene: Scene, tilesets: Tileset[]) {\r\n        this.scene = scene;\r\n        this.tilesets = tilesets;\r\n    }\r\n}","import { System } from '../systems/system';\r\n\r\nexport class SystemManager {\r\n    public static systems: any[] = [];\r\n\r\n    public static register(system: System): void {\r\n        if (SystemManager.systems.findIndex(x => x.name === system.name) === -1) {\r\n            SystemManager.systems.push(system);\r\n        }\r\n    }\r\n\r\n    public static get(systemName: string): System {\r\n        return SystemManager.systems.find(x => x.name === systemName);\r\n    }\r\n}","import { ColliderComponent } from '../../scene/components';\r\nimport { ScriptComponent } from '../../scene/components';\r\nimport { TransformComponent } from '../../scene/components';\r\nimport { ManagerFactory } from '../../core/manager-factory';\r\nimport { Entity } from '../../scene/entity';\r\nimport { Transform } from '../../primitives/transform';\r\nimport { CollisionDirection } from './collision-direction';\r\n\r\nimport { System } from '../../systems/system';\r\nimport { ComponentManager } from '../../core/component-manager';\r\n\r\nexport class CollisionSystem extends System {\r\n\tpublic name: string = 'collision';\r\n\r\n\tpublic currentEntityCollisions: Map<any, any[]> = new Map();\r\n\r\n\tpublic dispose(entity: Entity): void {\r\n\t\tif (this.currentEntityCollisions.has(entity.id)) {\r\n\t\t\tthis.currentEntityCollisions.delete(entity.id);\r\n\t\t}\r\n\r\n\t\tthis.currentEntityCollisions.forEach((values: any[], key: number) => {\r\n\t\t\tlet valueIndex: any = values.indexOf(entity.id);\r\n\r\n\t\t\tif (valueIndex !== -1) {\r\n\t\t\t\tvalues.splice(valueIndex, 1);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic update(): void {\r\n\t\tlet manager: ComponentManager<ColliderComponent> = ManagerFactory.get(ColliderComponent.name);\r\n\t\t\r\n\t\t// TODO: Replace this with a more robust collision dection implementation. For now this is fine for the number of sprites we are rendering with colliders.\r\n\t\tfor (let i = 0; i < manager.entities.length; i++) {\r\n\t\t\tfor (let ii = i + 1; ii < manager.entities.length; ii++) {\r\n\t\t\t\tthis.resolveCollision(manager.entities[i], manager.entities[ii]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate resolveCollision(sourceEntity: Entity, targetEntity: Entity): CollisionDirection | undefined {\r\n\t\tif (!sourceEntity || !targetEntity) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet sourceCollider: ColliderComponent = sourceEntity.getComponent(ColliderComponent) as ColliderComponent;\r\n\t\tlet targetCollider: ColliderComponent = targetEntity.getComponent(ColliderComponent) as ColliderComponent;\r\n\r\n\t\tlet sourceTransformComponent: TransformComponent = (sourceEntity.getComponent(TransformComponent) as TransformComponent);\r\n\t\tlet targetTransformComponent: TransformComponent = (targetEntity.getComponent(TransformComponent) as TransformComponent);\r\n\r\n\t\tif (!sourceTransformComponent || !targetTransformComponent) {\r\n\t\t\tconsole.log('[ENTITY NO LONGER EXISTS ABORTING COLLISION CHECK]');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet sourceTransform: Transform = sourceTransformComponent.transform;\r\n\t\tlet targetTransform: Transform = targetTransformComponent.transform;\r\n\r\n\t\t// get the vectors to check against\r\n\t\tlet vX = sourceTransform.x + sourceTransform.width / 2 - (targetTransform.x + targetTransform.width / 2);\r\n\t\tlet vY = sourceTransform.y + sourceTransform.height / 2 - (targetTransform.y + targetTransform.height / 2);\r\n\r\n\t\t// Half widths and half heights of the objects\r\n\t\tlet ww2 = sourceTransform.width / 2 + targetTransform.width / 2;\r\n\t\tlet hh2 = sourceTransform.height / 2 + targetTransform.height / 2;\r\n\r\n\t\tlet colDir = CollisionDirection.NONE;\r\n\r\n\t\t// If the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision.\r\n\t\tif (Math.abs(vX) < ww2 && Math.abs(vY) < hh2) {\r\n\t\t\tif (!this.currentEntityCollisions.has(sourceEntity.id) || this.currentEntityCollisions.get(sourceEntity.id)!.indexOf(targetEntity.id) === -1) {\r\n\t\t\t\tif (!this.currentEntityCollisions.has(sourceEntity.id)) {\r\n\t\t\t\t\tthis.currentEntityCollisions.set(sourceEntity.id, [targetEntity.id]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.currentEntityCollisions.get(sourceEntity.id)!.push(targetEntity.id);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Only resolve the collision if both the source and target colliders are not triggers.\r\n\t\t\t\tif (!sourceCollider.isTrigger && !targetCollider.isTrigger) {\r\n\t\t\t\t\t// figures out on which side we are colliding (top, bottom, left, or right)\r\n\t\t\t\t\tlet oX = ww2 - Math.abs(vX);\r\n\t\t\t\t\tlet oY = hh2 - Math.abs(vY);\r\n\r\n\t\t\t\t\t// TODO: Ensure we get the collision direction even for triggers.\r\n\t\t\t\t\tif (oX >= oY) {\r\n\t\t\t\t\t\tif (vY > 0) {\r\n\t\t\t\t\t\t\tcolDir = CollisionDirection.TOP;\r\n\t\t\t\t\t\t\tsourceTransform.y += oY;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcolDir = CollisionDirection.BOTTOM;\r\n\t\t\t\t\t\t\tsourceTransform.y -= oY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (vX > 0) {\r\n\t\t\t\t\t\t\tcolDir = CollisionDirection.LEFT;\r\n\t\t\t\t\t\t\tsourceTransform.x += oX;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcolDir = CollisionDirection.RIGHT;\r\n\t\t\t\t\t\t\tsourceTransform.x -= oX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('TRIGGER ENTER');\r\n\r\n\t\t\t\t\tconsole.log(sourceEntity);\r\n\t\t\t\t\tconsole.log(targetEntity);\r\n\r\n\t\t\t\t\tsourceEntity.getScriptInstances().forEach((scriptInstance) => {\r\n\t\t\t\t\t\tif (scriptInstance.instance && scriptInstance.instance.onTriggerEnter) {\r\n\t\t\t\t\t\t\tscriptInstance.instance.onTriggerEnter(targetEntity);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\ttargetEntity.getScriptInstances().forEach((scriptInstance) => {\r\n\t\t\t\t\t\tif (scriptInstance.instance && scriptInstance.instance.onTriggerEnter) {\r\n\t\t\t\t\t\t\tscriptInstance.instance.onTriggerEnter(sourceEntity);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log('TRIGGER STAY');\r\n\r\n\t\t\t\tsourceEntity.getScriptInstances().forEach((scriptInstance) => {\r\n\t\t\t\t\tif (scriptInstance.instance && scriptInstance.instance.onTriggerEnter!) {\r\n\t\t\t\t\t\tscriptInstance.instance.onTriggerStay(targetEntity);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttargetEntity.getScriptInstances().forEach((scriptInstance) => {\r\n\t\t\t\t\tif (scriptInstance.instance && scriptInstance.instance.onTriggerEnter!) {\r\n\t\t\t\t\t\tscriptInstance.instance.onTriggerStay(sourceEntity);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.currentEntityCollisions.has(sourceEntity.id) && this.currentEntityCollisions.get(sourceEntity.id)!.indexOf(targetEntity.id) !== -1) {\r\n\t\t\t\tthis.currentEntityCollisions.delete(sourceEntity.id);\r\n\r\n\t\t\t\t(<any>ManagerFactory.get(ScriptComponent.name)).instances;\r\n\r\n\t\t\t\tsourceEntity.getScriptInstances().forEach((scriptInstance) => {\r\n\t\t\t\t\tif (scriptInstance.instance && scriptInstance.instance.onTriggerEnter!) {\r\n\t\t\t\t\t\tscriptInstance.instance.onTriggerLeave(targetEntity);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttargetEntity.getScriptInstances().forEach((scriptInstance) => {\r\n\t\t\t\t\tif (scriptInstance.instance && scriptInstance.instance.onTriggerEnter!) {\r\n\t\t\t\t\t\tscriptInstance.instance.onTriggerLeave(sourceEntity);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn colDir; // If you need info of the side that collided\r\n\t}\r\n}\r\n","export enum CollisionDirection {\r\n    NONE = 0,\r\n    TOP = 1,\r\n    RIGHT = 2,\r\n    BOTTOM = 3,\r\n    LEFT = 4\r\n}","// import { ScriptComponentManager } from 'components/managers/ScriptComponentManager';\r\nimport { ScriptComponent } from '../../scene/components';\r\nimport { Entity } from '../../scene/entity';\r\n\r\nimport { ManagerFactory } from '../../core/manager-factory';\r\nimport { System } from '../system';\r\n\r\nexport class ScriptSystem extends System {\r\n    public name: string = 'script';\r\n\r\n    public update(): void {\r\n        // let scriptComponentManager = ManagerFactory.get(ScriptComponent.name) as ScriptComponentManager;\r\n\r\n        // scriptComponentManager.entities.forEach((entity: Entity) => {\r\n        //     let scriptComponent = scriptComponentManager.getInstance(entity) as ScriptComponent;\r\n\r\n        //     if (!scriptComponent.instance) {\r\n        //         scriptComponent.instance = new (<any>scriptComponent).scritableEntity();\r\n        //         scriptComponent.instance.onCreate();\r\n        //     }\r\n\r\n        //     scriptComponent.instance.update();\r\n        // });\r\n    }\r\n\r\n    dispose(entity: Entity): void {\r\n        \r\n    }\r\n}","import { BaseRenderer } from '../../graphics/renderer/base-renderer';\r\nimport Mat4 from '../../graphics/Mat4';\r\nimport { Tileset } from '../../graphics/tileset';\r\nimport { Scene } from '../../scene/scene';\r\n\r\nclass Drawable {\r\n    public buffer?: WebGLBuffer | null;\r\n    public positions?: number[];\r\n}\r\n\r\nclass Image {\r\n\r\n}\r\n\r\nexport class WebGLRenderer extends BaseRenderer {\r\n    public scene: Scene;\r\n\r\n    public engineCanvas!: HTMLCanvasElement;\r\n\r\n    public tilesets: Tileset[] = [];\r\n\r\n    /**\r\n     * The 2D rendering context for the default canvas.\r\n     */\r\n    public context!: WebGLRenderingContext;\r\n\r\n    public shaderPath: string = '/shaders';\r\n\r\n    private _program!: WebGLProgram;\r\n\r\n    private _imageProgram!: WebGLProgram;\r\n    \r\n    private _positionAttributeLocation!: number;\r\n\r\n    private _colorAttributeLocation!: number;\r\n\r\n    private _resolutionUniformLocation!: WebGLUniformLocation;\r\n\r\n    private _colorUniformLocation!: WebGLUniformLocation;\r\n\r\n    private _translationUniformLocation!: WebGLUniformLocation;\r\n\r\n    private _rotationUniformLocation!: WebGLUniformLocation;\r\n\r\n    private _scaleUniformLocation!: WebGLUniformLocation;\r\n\r\n    private _matrixUniformLocation!: WebGLUniformLocation;\r\n\r\n    private _drawables: Drawable[] = [];\r\n\r\n    private _vertexShaders: WebGLShader[] = [];\r\n\r\n    private _fragmentShaders: WebGLShader[] = [];\r\n\r\n    private _testTranslationAmount: number[] = [0, 0, 0]; // x,y,z\r\n\r\n    private _testRotationAmount: number[] = [0, 1, 0]; // x,y,z\r\n\r\n    private _testScaleAmount: number[] = [1, 1, 0]; //x,y,z\r\n\r\n    private _testTranslateSpeed: number = 100;\r\n\r\n    private _colorBuffer!: WebGLBuffer | null;\r\n\r\n    constructor(scene: Scene, tilesets: Tileset[]) {\r\n        super();\r\n\r\n        this.scene = scene;\r\n        this.tilesets = tilesets;\r\n    }\r\n\r\n    public async init(): Promise<void> {\r\n        this.context = this.engineCanvas.getContext('webgl')!;\r\n\r\n        if (!this.context) {\r\n            throw \"WebGL not supported.\";\r\n        }\r\n\r\n        this.engineCanvas.width = window.innerWidth;\r\n        this.engineCanvas.height = window.innerHeight;\r\n\r\n        let vertextShaderSource: string = await (await fetch(`${this.shaderPath}/vertex-shader.glsl`)).text();\r\n        let fragmentShaderSource: string = await (await fetch(`${this.shaderPath}/fragment-shader.glsl`)).text();\r\n\r\n        // TODO: Refactor into basic helper method.\r\n        let vertextShader: WebGLShader = this._createShader(this.context.VERTEX_SHADER, vertextShaderSource);\r\n        let fragmentShader: WebGLShader = this._createShader(this.context.FRAGMENT_SHADER, fragmentShaderSource);\r\n\r\n        // Create a new program and link the shaders.\r\n        this._program = this._createProgram(vertextShader, fragmentShader);\r\n\r\n        // Look where position data will go.\r\n        this._positionAttributeLocation = this.context.getAttribLocation(this._program, 'a_position');\r\n        this._colorAttributeLocation = this.context.getAttribLocation(this._program, 'a_color');\r\n\r\n        this._colorBuffer = this.context.createBuffer();\r\n        this.context.bindBuffer(this.context.ARRAY_BUFFER, this._colorBuffer);\r\n\r\n        this.context.bufferData(this.context.ARRAY_BUFFER, new Uint8Array([\r\n            255, 255, 255,\r\n            0, 0, 0,\r\n            0, 0, 0,\r\n            0, 0, 0,\r\n            0, 0, 0,\r\n            0, 0, 0\r\n        ]), this.context.STATIC_DRAW);\r\n\r\n        // Looks up uniforms for shader.\r\n        // Do this on init not in the render loop.\r\n        this._colorUniformLocation = this.context.getUniformLocation(this._program, 'u_color')!;\r\n        this._resolutionUniformLocation = this.context.getUniformLocation(this._program, 'u_resolution')!;\r\n        this._matrixUniformLocation = this.context.getUniformLocation(this._program, 'u_matrix')!;\r\n\r\n        this._createDrawable([\r\n            10, 20, 0, // tri 1 vert 1\r\n            80, 20, 0, // tri 1 vert 2\r\n            10, 30, 0, // tri 1 vert 3\r\n            10, 30, 0,\r\n            80, 20, 0,\r\n            80, 30, 0\r\n        ]);\r\n\r\n        // this._createDrawable([\r\n        //     100, 200, 0,\r\n        //     800, 200, 0,\r\n        //     100, 300, 0,\r\n        //     100, 300, 0,\r\n        //     800, 200, 0,\r\n        //     800, 300, 0\r\n        // ]);\r\n    }\r\n\r\n    private _createDrawable(positions: number[]): void {\r\n        let drawable: Drawable = new Drawable();\r\n\r\n        drawable.positions = positions;\r\n        drawable.buffer = this.context.createBuffer();\r\n\r\n        this.context.bindBuffer(this.context.ARRAY_BUFFER, drawable.buffer);\r\n        this.context.bufferData(this.context.ARRAY_BUFFER, new Float32Array(drawable.positions), this.context.STATIC_DRAW);\r\n\r\n        this._drawables.push(drawable);\r\n    }\r\n\r\n    private _convertAngleUnitCircleCoordinates(angleInDegrees: number): any {\r\n        var angleInRadians = angleInDegrees * Math.PI / 180;\r\n\r\n        let sine = Math.sin(angleInRadians);\r\n        let cosine = Math.cos(angleInRadians);\r\n\r\n        return {\r\n            sine: sine,\r\n            cosine: cosine\r\n        }\r\n    }\r\n\r\n    angleInDegress: number = 0;\r\n    angleInRadians: number = 0;\r\n\r\n    public draw(): void {\r\n        console.log('[WEBGL]: Draw');\r\n\r\n        // Update test translate\r\n        // this._testTranslationAmount[0] += this._testTranslateSpeed * Time.deltaTime;\r\n\r\n        // this.angleInDegress += 10 * Time.deltaTime;\r\n\r\n        // Points on a unit circle are called sine and cosine (sine = x) (cosine = y).\r\n        let unitCircleCoordinates: any = this._convertAngleUnitCircleCoordinates(this.angleInDegress);\r\n\r\n        this._testRotationAmount[0] = unitCircleCoordinates.sine;\r\n        this._testRotationAmount[1] = unitCircleCoordinates.cosine;\r\n\r\n        // Tells WebGL to convert the clip space values we set gl_position to in the vertext shader back into pixels (screen space).\r\n        // -1 maps to 0 and 1 maps to the canvas width same goes for the y-axis.\r\n        this.context.viewport(0, 0, this.engineCanvas.width, this.engineCanvas.height);\r\n\r\n        // Clear the canvas by making it transparent.\r\n        this.context.clearColor(0, 0, 0, 0);\r\n        this.context.clear(this.context.COLOR_BUFFER_BIT);\r\n\r\n        this.context.useProgram(this._program);\r\n\r\n        // Transform from clip space back into pixels for positional data.\r\n        this.context.uniform2f(this._resolutionUniformLocation, this.engineCanvas.width, this.engineCanvas.height);\r\n\r\n        // Iterate through the drawables to render.\r\n        this._drawables.forEach((drawable: Drawable) => {\r\n            // TODO: Should this be done in each iteration? Or before?\r\n            // Enable position attribute in vertext shader. So WebGL can use the data we set in the ARRAY_BUFFER.\r\n            this.context.enableVertexAttribArray(this._positionAttributeLocation);\r\n\r\n            this.context.bindBuffer(this.context.ARRAY_BUFFER, drawable.buffer!);\r\n\r\n            let size: number = 3; // 2 components per iteration -> 3 for orthographic.\r\n            let type = this.context.FLOAT; // the data is 32bit floats\r\n            let normalize: boolean = false; // don't normalize the data\r\n            let stride: number = 0; // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n            let offset: number = 0; // start at the beginning of the buffer\r\n    \r\n            this.context.vertexAttribPointer(this._positionAttributeLocation, size, type, normalize, stride, offset);\r\n\r\n            // TODO: Should this be done in each iteration? Or before?\r\n            // Enable position attribute in vertext shader. So WebGL can use the data we set in the ARRAY_BUFFER.\r\n            this.context.enableVertexAttribArray(this._colorAttributeLocation);\r\n\r\n            this.context.bindBuffer(this.context.ARRAY_BUFFER, this._colorBuffer);\r\n\r\n            let cSize: number = 3; // 2 components per iteration -> 3 for orthographic.\r\n            let cType = this.context.UNSIGNED_BYTE; // the data is 32bit floats\r\n            let cNormalize: boolean = false; // don't normalize the data\r\n            let cStride: number = 0; // 0 = move forward size * sizeof(type) each iteration to get the next position\r\n            let cOffset: number = 0; // start at the beginning of the buffer\r\n    \r\n            this.context.vertexAttribPointer(this._colorAttributeLocation, cSize, cType, cNormalize, cStride, cOffset);\r\n    \r\n            // Set uniforms\r\n            this.context.uniform4f(this._colorUniformLocation, 1, 1, 1, 1); // color\r\n\r\n            // var left = 0;\r\n            // var right = this.context.canvas.width;\r\n            // var bottom = this.context.canvas.height;\r\n            // var top = 0;\r\n            // var near = 400;\r\n            // var far = -400;\r\n            // var matrix = Mat4.orthographic(left, right, bottom, top, near, far);\r\n\r\n            let matrix = Mat4.projection(this.context.canvas.width, this.context.canvas.height, 400);\r\n\r\n            // TODO: This was only commented out to get the build working.\r\n            // matrix = Mat4.translate(matrix, this._testTranslationAmount[0], this._testTranslationAmount[1], this._testTranslationAmount[2]);\r\n            // matrix = Mat4.xRotate(matrix, this.angleInDegress * Math.PI / 180);\r\n            // matrix = Mat4.yRotate(matrix, this.angleInDegress * Math.PI / 180);\r\n            // matrix = Mat4.zRotate(matrix, this.angleInDegress * Math.PI / 180);\r\n            // matrix = Mat4.scale(matrix, this._testScaleAmount[0], this._testScaleAmount[1], this._testScaleAmount[2]);\r\n\r\n            // Adjust origin. How does this actually adjust the rotation point? Can't seem to get it working?\r\n            // matrix = Mat4.translate(matrix, 150, 150, 150);\r\n\r\n            this.context.uniformMatrix4fv(this._matrixUniformLocation, false, matrix);\r\n\r\n            let primitiveType: number = this.context.TRIANGLES;\r\n            let drawOffset: number = 0;\r\n            let drawCount: number = 6; // square from two triangles would be 6.\r\n            this.context.drawArrays(primitiveType, drawOffset, drawCount);\r\n        });\r\n    }\r\n\r\n    // public drawImage(texture: WebGLTexture, textureWidth: number, textureHeight: number, destinationX: number, destinationY: number): void {\r\n    //     this.context.bindTexture(this.context.TEXTURE_2D);\r\n\r\n    //     this.context.useProgram(this._imageProgram);\r\n\r\n    //     this.context.bindBuffer(this.context.ARRAY_BUFFER, positionBuffer);\r\n    //     this.context.enableVertexAttribArray(positionLocation);\r\n    //     this.context.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\r\n    //     this.context.bindBuffer(this.context.ARRAY_BUFFER, texcoordBuffer);\r\n    //     this.context.enableVertexAttribArray(texcoordLocation);\r\n    //     this.context.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\r\n\r\n    //     // this matrix will convert from pixels to clip space\r\n    //     var matrix = Mat3.orthographic(0, gl.canvas.width, gl.canvas.height, 0, -1, 1);\r\n        \r\n    //     // this matrix will translate our quad to dstX, dstY\r\n    //     matrix = m4.translate(matrix, dstX, dstY, 0);\r\n        \r\n    //     // this matrix will scale our 1 unit quad\r\n    //     // from 1 unit to texWidth, texHeight units\r\n    //     matrix = Mat4.scale(matrix, texWidth, texHeight, 1);\r\n        \r\n    //     // Set the matrix.\r\n    //     this.context.uniformMatrix4fv(matrixLocation, false, matrix);\r\n        \r\n    //     // Tell the shader to get the texture from texture unit 0\r\n    //     this.context.uniform1i(textureLocation, 0);\r\n        \r\n    //     // draw the quad (2 triangles, 6 vertices)\r\n    //     gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n    // }\r\n\r\n    /**\r\n     * Creates a shader of the given type using the shader source text.\r\n     * @param shaderType The type of shader either VERTEXT_SHADER or FRAGMENT_SHADER.\r\n     * @param shaderSource The source text of the shader.\r\n     */\r\n    private _createShader(shaderType: GLenum, shaderSource: string): WebGLShader {\r\n        let shader: WebGLShader = this.context.createShader(shaderType)!;\r\n\r\n        // Create container for the shader source text to be placed into then compile.\r\n        this.context.shaderSource(shader, shaderSource);\r\n        this.context.compileShader(shader);\r\n\r\n        let successful: boolean = this.context.getShaderParameter(shader, this.context.COMPILE_STATUS);\r\n\r\n        if (successful) {\r\n            return shader;\r\n        }\r\n\r\n        // TODO: Refactor into some sort of general dispose function for shaders.\r\n        console.log(this.context.getShaderInfoLog(shader));\r\n        this.context.deleteShader(shader);\r\n\r\n        throw `[SHADER ERROR]: Unable to load shader ${shaderType}`;\r\n    }\r\n\r\n    /**\r\n     * Links vertex shader and fragment shader into a WebGL program.\r\n     * @param vertextShader The vertex shader to link to the program.\r\n     * @param fragmentShader The fragment shader to link to the program.\r\n     */\r\n    private _createProgram(vertextShader: WebGLShader, fragmentShader: WebGLShader): WebGLProgram {\r\n        let program: WebGLProgram = this.context.createProgram()!;\r\n\r\n        // TODO: Add checks to determine that each shader parameter is actually of the correct shader type.\r\n        this.context.attachShader(program, vertextShader);\r\n        this.context.attachShader(program, fragmentShader);\r\n\r\n        this.context.linkProgram(program);\r\n\r\n        let successful: boolean = this.context.getProgramParameter(program, this.context.LINK_STATUS);\r\n\r\n        if (successful) {\r\n            return program;\r\n        }\r\n\r\n        // TODO: Refactor into some sort of general dispose function for programs.\r\n        console.log(this.context.getProgramInfoLog(program));\r\n        this.context.deleteProgram(program);\r\n\r\n        throw `[SHADER ERROR]: Unable to link shaders to program`;\r\n    }\r\n}","export default class Mat4 {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public static identity(): number[] {\r\n        return [\r\n            1, 0, 0, \r\n            0, 1, 0, \r\n            0, 0, 1\r\n        ];\r\n    }\r\n\r\n    public static translation(translateX: number, translateY: number, translateZ: number): number[] {\r\n        let x: number = translateX;\r\n        let y: number = translateY;\r\n        let z: number = translateZ;\r\n\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            x, y, z, 1\r\n        ];\r\n    }\r\n\r\n    public static xRotation(angleInRadians: number) {\r\n        var c = Math.cos(angleInRadians);\r\n        var s = Math.sin(angleInRadians);\r\n        \r\n        return [\r\n            1, 0, 0, 0,\r\n            0, c, s, 0,\r\n            0, -s, c, 0,\r\n            0, 0, 0, 1,\r\n        ];\r\n    }\r\n     \r\n    public static yRotation(angleInRadians: number): number[] {\r\n        var c = Math.cos(angleInRadians);\r\n        var s = Math.sin(angleInRadians);\r\n        \r\n        return [\r\n            c, 0, -s, 0,\r\n            0, 1, 0, 0,\r\n            s, 0, c, 0,\r\n            0, 0, 0, 1,\r\n        ];\r\n    }\r\n     \r\n    public static zRotation(angleInRadians: number) {\r\n        var c = Math.cos(angleInRadians);\r\n        var s = Math.sin(angleInRadians);\r\n        \r\n        return [\r\n            c, s, 0, 0,\r\n            -s, c, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1,\r\n        ];\r\n    }\r\n     \r\n    public static scaling(sx: number, sy: number, sz: number) {\r\n        return [\r\n            sx, 0,  0,  0,\r\n            0, sy,  0,  0,\r\n            0,  0, sz,  0,\r\n            0,  0,  0,  1,\r\n        ];\r\n    }\r\n\r\n    public static multiply(a: any, b: any): number[] {\r\n        var b00 = b[0 * 4 + 0];\r\n        var b01 = b[0 * 4 + 1];\r\n        var b02 = b[0 * 4 + 2];\r\n        var b03 = b[0 * 4 + 3];\r\n        var b10 = b[1 * 4 + 0];\r\n        var b11 = b[1 * 4 + 1];\r\n        var b12 = b[1 * 4 + 2];\r\n        var b13 = b[1 * 4 + 3];\r\n        var b20 = b[2 * 4 + 0];\r\n        var b21 = b[2 * 4 + 1];\r\n        var b22 = b[2 * 4 + 2];\r\n        var b23 = b[2 * 4 + 3];\r\n        var b30 = b[3 * 4 + 0];\r\n        var b31 = b[3 * 4 + 1];\r\n        var b32 = b[3 * 4 + 2];\r\n        var b33 = b[3 * 4 + 3];\r\n        var a00 = a[0 * 4 + 0];\r\n        var a01 = a[0 * 4 + 1];\r\n        var a02 = a[0 * 4 + 2];\r\n        var a03 = a[0 * 4 + 3];\r\n        var a10 = a[1 * 4 + 0];\r\n        var a11 = a[1 * 4 + 1];\r\n        var a12 = a[1 * 4 + 2];\r\n        var a13 = a[1 * 4 + 3];\r\n        var a20 = a[2 * 4 + 0];\r\n        var a21 = a[2 * 4 + 1];\r\n        var a22 = a[2 * 4 + 2];\r\n        var a23 = a[2 * 4 + 3];\r\n        var a30 = a[3 * 4 + 0];\r\n        var a31 = a[3 * 4 + 1];\r\n        var a32 = a[3 * 4 + 2];\r\n        var a33 = a[3 * 4 + 3];\r\n     \r\n        return [\r\n          b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n          b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n          b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n          b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n          b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n          b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n          b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n          b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n          b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n          b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n          b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n          b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n          b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n          b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n          b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n          b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n        ];\r\n    }\r\n\r\n    public static translate(m: number, tx: number, ty: number, tz: number) {\r\n        return Mat4.multiply(m, Mat4.translation(tx, ty, tz));\r\n    }\r\n    \r\n    public static xRotate(m: number, angleInRadians: number) {\r\n        return Mat4.multiply(m, Mat4.xRotation(angleInRadians));\r\n    }\r\n    \r\n    public static yRotate(m: number, angleInRadians: number) {\r\n        return Mat4.multiply(m, Mat4.yRotation(angleInRadians));\r\n    }\r\n    \r\n    public static zRotate(m: number, angleInRadians: number) {\r\n        return Mat4.multiply(m, Mat4.zRotation(angleInRadians));\r\n    }\r\n    \r\n    public static scale(m: number, sx: number, sy: number, sz: number) {\r\n        return Mat4.multiply(m, Mat4.scaling(sx, sy, sz));\r\n    }\r\n\r\n    public static projection(width: number, height: number, depth: number) {\r\n        // Note: This matrix flips the Y axis so 0 is at the top.\r\n        return [\r\n           2 / width, 0, 0, 0,\r\n           0, -2 / height, 0, 0,\r\n           0, 0, 2 / depth, 0,\r\n          -1, 1, 0, 1,\r\n        ];\r\n    }\r\n    \r\n    public static orthographic(left: number, right: number, bottom: number, top: number, near: number, far: number): number[] {\r\n        return [\r\n            2 / (right - left), 0, 0, 0,\r\n            0, 2 / (top - bottom), 0, 0,\r\n            0, 0, 2 / (near - far), 0,\r\n       \r\n            (left + right) / (left - right),\r\n            (bottom + top) / (bottom - top),\r\n            (near + far) / (near - far),\r\n            1,\r\n        ];\r\n    }\r\n}","// Local imports.\r\nimport { Point } from \"../../primitives/point\";\r\nimport { Transform } from \"../../primitives/transform\";\r\nimport { BaseRenderer } from \"./base-renderer\";\r\nimport { Scene } from '../../scene/scene';\r\nimport { ManagerFactory } from '../../core/manager-factory';\r\n\r\n// Component imports.\r\nimport { SpriteRendererComponent } from '../../scene/components';\r\nimport { MaterialComponent } from '../../scene/components';\r\nimport { TransformComponent } from '../../scene/components';\r\nimport { TilemapComponent } from '../../scene/components';\r\n\r\nimport { Logger } from '../../logging/logger';\r\n\r\nimport { Layer } from '../../graphics/layer';\r\nimport { Tileset } from '../../graphics/tileset';\r\nimport { Camera } from '../../graphics/camera';\r\nimport { ComponentManager } from \"../../core/component-manager\";\r\n\r\nexport class CanvasRenderer extends BaseRenderer {\r\n    /**\r\n     * The canvas to render the current scene to.\r\n     */\r\n    public engineCanvas: HTMLCanvasElement;\r\n\r\n    /**\r\n     * The current scene to render.\r\n     */\r\n    public scene: Scene;\r\n\r\n    /**\r\n     * The tilesets to use for the current scene.\r\n     */\r\n    public tilesets: Tileset[] = [];\r\n\r\n    /**\r\n     * The 2D rendering context for the default canvas.\r\n     */\r\n    public context: CanvasRenderingContext2D;\r\n\r\n    /**\r\n     * The main scene camera this is always here.\r\n     */\r\n    public mainCamera: Camera = new Camera();\r\n\r\n    /**\r\n     * Default constructor.\r\n     */\r\n    constructor(scene: Scene, tilesets: Tileset[]) {\r\n        super();\r\n\r\n        this.scene = scene;\r\n        this.tilesets = tilesets;\r\n\r\n        if (!this.scene) {\r\n            throw \"You cannot initialize the renderer without a scene.\";\r\n        }\r\n\r\n        if (!this.tilesets || this.tilesets.length === 0) {\r\n            throw \"You cannot initialize the renderer without any tilesets.\";\r\n        }\r\n\r\n        this.engineCanvas = <HTMLCanvasElement>document.querySelector('#engine-canvas');\r\n        this.context = <CanvasRenderingContext2D>this.engineCanvas.getContext('2d');\r\n    }\r\n\r\n    /**\r\n     * Initializes the canvas for the renderer.\r\n     */\r\n    public init() {\r\n        Logger.info('Started initializing canvas renderer', CanvasRenderer.name);\r\n\r\n        this.engineCanvas.addEventListener('mousedown', (event) => this.onCanvasMouseDown(event));\r\n        this.engineCanvas.addEventListener('mouseup', (event) => this.onCanvasMouseUp(event));\r\n        this.engineCanvas.addEventListener('mousemove', (event) => this.onCanvasMouseMove(event));\r\n\r\n        // Initialize the camera for the renderer.\r\n        this.mainCamera.viewport = new Transform(0, 0, this.getCanvasWidth(), this.getCanvasHeight());\r\n        this.mainCamera.max = new Point((this.scene.columns * this.scene.tileSize) - this.mainCamera.viewport.width, (this.scene.rows * this.scene.tileSize) - this.mainCamera.viewport.height);\r\n\r\n        Logger.info('Finished initializing canvas renderer', CanvasRenderer.name);\r\n    }\r\n\r\n    /**\r\n     * Draw any entities to the canvas if they have the sprite renderer component.\r\n     */\r\n    draw(): void {\r\n        /**\r\n         * Clear the canvas for the next render call.\r\n         */\r\n        this.clearCanvas();\r\n\r\n        /**\r\n         * Render the tilemap and standalone sprites.\r\n         */\r\n        this.render();\r\n\r\n        /**\r\n         * Ensure the canvas is resized to match the current size of the viewport.\r\n         */\r\n        this.resizeCanvas();\r\n    }\r\n\r\n    private render(): void {\r\n        this.scene.layers.forEach((layer: Layer, index: number) => {\r\n            if (layer.enabled) {\r\n                // Render the tilemap sprites for the current layer.\r\n                let tilemapManager: ComponentManager<TilemapComponent> = ManagerFactory.get(TilemapComponent.name);\r\n\r\n                tilemapManager.instances.forEach((tilemapInstance: TilemapComponent) => {\r\n                    var startCol = 0; // Math.floor(camera.viewport.x / this.scene.tileSize);\r\n                    var endCol = 64; // startCol + (camera.viewport.width / this.scene.tileSize) + 1;\r\n                    var startRow = 0; // Math.floor(camera.viewport.y / this.scene.tileSize);\r\n                    var endRow = 64; // startRow + (camera.viewport.height / this.scene.tileSize) + 1;\r\n                    var offsetX = 0; // -camera.viewport.x + startCol * this.scene.tileSize;\r\n                    var offsetY = 0; // -camera.viewport.y + startRow * this.scene.tileSize;\r\n\r\n                    for (let col = startCol; col <= endCol; col++) {\r\n                        for (let row = startRow; row <= endRow; row++) {\r\n                            let sprite: number = tilemapInstance.tiles[row * 64 + col]; // this.scene.columns\r\n\r\n                            var x = (col - startCol) * 32 + offsetX; // this.scene.tileSize\r\n                            var y = (row - startRow) * 32 + offsetY; // this.scene.tileSize\r\n\r\n                            this.context.drawImage(\r\n                                this.tilesets[tilemapInstance.tilesetIndex].image!, //this.tilesets[layer.tileset].image,\r\n                                sprite * 32,\r\n                                0,\r\n                                32,\r\n                                32,\r\n                                Math.round(x),\r\n                                Math.round(y),\r\n                                32,\r\n                                32\r\n                            );\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // Render any standalone sprites for the current layer.\r\n                let spriteManager: ComponentManager<SpriteRendererComponent> = ManagerFactory.get(SpriteRendererComponent.name);\r\n\r\n                spriteManager.entities.forEach((entity) => {\r\n                    let spriteRenderer = spriteManager.getInstance(entity) as SpriteRendererComponent;\r\n                    let spriteTransform = entity.getComponent(TransformComponent) as TransformComponent;\r\n\r\n                    let material = entity.getComponent(MaterialComponent) as MaterialComponent;\r\n\r\n                    if (material) {\r\n                        this.applyMaterial(material);\r\n                    }\r\n\r\n                    this.context.drawImage(\r\n                        this.tilesets[0].image!,// this.tilesets[spriteRendererComponent.layer].image,\r\n                        spriteRenderer.column! * this.scene.tileSize,\r\n                        spriteRenderer.row! * this.scene.tileSize,\r\n                        this.scene.tileSize,\r\n                        this.scene.tileSize,\r\n                        spriteTransform.transform.x - 0, // cameraOffsetX,\r\n                        spriteTransform.transform.y - 0, // cameraOffsetY,\r\n                        this.scene.tileSize,\r\n                        this.scene.tileSize\r\n                    );\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    applyMaterial(materialComponent: MaterialComponent): void {\r\n        this.context.fillStyle = materialComponent.fillStyle!;\r\n        this.context.globalAlpha = materialComponent.alpha;\r\n    }\r\n\r\n    /**\r\n     * Clears the canvas for the next draw call.\r\n     * \r\n     * @author NSSure\r\n     * @since 11/8/2020\r\n     */\r\n    clearCanvas(): void {\r\n        this.context.clearRect(0, 0, this.getCanvasWidth(), this.getCanvasHeight());\r\n    }\r\n\r\n    /**\r\n     * Resizes the canvas canvas to fit the dimensions of the viewport.\r\n     * \r\n     * @author NSSure\r\n     * @since 11/8/2020\r\n     */\r\n    resizeCanvas(): void {\r\n        if (this.getCanvasWidth() !== window.innerWidth || this.getCanvasHeight() !== window.innerHeight) {\r\n            this.setCanvasWidth(window.innerWidth);\r\n            this.setCanvasHeight(window.innerHeight);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the current width of the canvas.\r\n     */\r\n    getCanvasHeight(): number {\r\n        return this.engineCanvas.height;\r\n    }\r\n\r\n    /**\r\n     * Gets the current height of the canvas.\r\n     */\r\n    getCanvasWidth(): number {\r\n        return this.engineCanvas.width;\r\n    }\r\n\r\n    /**\r\n     * Sets the height of the canvas.\r\n     * @param height The height to set the canvas to.\r\n     */\r\n    setCanvasHeight(height: number): void {\r\n        this.engineCanvas.height = height;\r\n    }\r\n\r\n    /**\r\n     * Sets the width of the canvas.\r\n     * @param width The width to set the canvas to.\r\n     */\r\n    setCanvasWidth(width: number): void {\r\n        this.engineCanvas.width = width;\r\n    }\r\n\r\n    onCanvasMouseDown(event: MouseEvent): void {\r\n        console.log('mousedown');\r\n    }\r\n\r\n    onCanvasMouseUp(event: MouseEvent): void {\r\n        console.log('mouseup');\r\n    }\r\n\r\n    onCanvasMouseMove(event: MouseEvent): void {\r\n        console.log('mousemove');\r\n    }\r\n}","import { Point } from '../primitives/point';\r\nimport { Transform } from '../primitives/transform';\r\n\r\n/**\r\n * Determines if the given x/y coordinate is contained with the given dimensions. Think\r\n * if a mouse is hovering over a button.\r\n * \r\n * @author NSSure\r\n * @since 11/9/2020\r\n * \r\n * @param point The point that needs to be checked against the given container dimensions.\r\n * @param containerOrigin The x and y coordinates of container.\r\n * @param containerWidth The width of the container.\r\n * @param containerHeight The height of the container.\r\n */\r\nexport function isCoordinateContained(point: Point, containerTransform: Transform) {\r\n    if (point.x >= containerTransform.x && (point.x <= (containerTransform.x + containerTransform.width))) {\r\n        if (point.y >= containerTransform.y && (point.y <= (containerTransform.y + containerTransform.height))) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}","import { Entity } from '../../scene/entity';\r\nimport { Point } from '../../primitives/point';\r\nimport { Transform } from '../../primitives/transform';\r\n\r\nexport default abstract class Collider extends Entity {\r\n    isTrigger: boolean = false;\r\n    isTriggered: boolean = false;\r\n\r\n    points: Array<Point> = new Array();\r\n\r\n    abstract onCollisionEnter(): void;\r\n    abstract onCollisionLeave(): void;\r\n\r\n    constructor(transform: Transform) {\r\n        super();\r\n\r\n        // this.transform = transform;\r\n\r\n        // Top left.\r\n        this.points.push(new Point(transform.x, transform.y));\r\n\r\n        // Top right.\r\n        this.points.push(new Point(transform.x + transform.width, transform.y));\r\n\r\n        // Bottom left.\r\n        this.points.push(new Point(transform.x, transform.y + transform.height));\r\n\r\n        // Bottom right.\r\n        this.points.push(new Point(transform.x + transform.width, transform.y + transform.height));\r\n    }\r\n}","// Core\r\nexport * from './lib/core/application';\r\nexport * from './lib/core/component-manager';\r\nexport * from './lib/core/configuration';\r\nexport * from './lib/core/constants';\r\nexport * from './lib/core/entity-manager';\r\nexport * from './lib/core/manager-factory';\r\nexport * from './lib/core/scene-manager';\r\nexport * from './lib/core/system-manager';\r\nexport * from './lib/core/time';\r\n\r\n// Graphics\r\nexport * from './lib/graphics/renderer/base-renderer';\r\nexport * from './lib/graphics/renderer/canvas-renderer';\r\nexport * from './lib/graphics/renderer/webgl-renderer';\r\nexport * from './lib/graphics/camera';\r\nexport * from './lib/graphics/input';\r\nexport * from './lib/graphics/layer';\r\nexport * from './lib/graphics/Mat3';\r\nexport * from './lib/graphics/Mat4';\r\nexport * from './lib/graphics/mouse';\r\nexport * from './lib/graphics/sprite';\r\nexport * from './lib/graphics/tileset';\r\n\r\n// Helpers\r\nexport * from './lib/helpers/are-transforms-equal';\r\nexport * from './lib/helpers/are-transforms-overlapping';\r\nexport * from './lib/helpers/current-viewport-grid-square';\r\nexport * from './lib/helpers/is-canvas-empty';\r\nexport * from './lib/helpers/is-coordinate-contained';\r\nexport * from './lib/helpers/is-transform-empty';\r\nexport * from './lib/helpers/screen-to-world';\r\nexport * from './lib/helpers/world-to-screen';\r\n\r\n// Logging\r\nexport * from './lib/logging/logger';\r\n\r\n// Models\r\nexport * from './lib/models/returns/load-scene-return';\r\n\r\n// Physics\r\nexport * from './lib/physics/collision/collider';\r\nexport * from './lib/physics/collision/square-collider';\r\nexport * from './lib/physics/physics';\r\n\r\n// Primitives\r\nexport * from './lib/primitives/point';\r\nexport * from './lib/primitives/transform';\r\n\r\n// Scene\r\nexport * from './lib/scene/components';\r\nexport * from './lib/scene/entity';\r\nexport * from './lib/scene/manifest';\r\nexport * from './lib/scene/scene';\r\n\r\n// State\r\nexport * from './lib/state/state-manager';\r\n\r\n// Systems\r\nexport * from './lib/systems/collision/collision-direction';\r\nexport * from './lib/systems/collision/collision-system';\r\nexport * from './lib/systems/script/ScriptSystem';\r\nexport * from './lib/systems/script/ScriptableEntity';\r\nexport * from './lib/systems/system';","import { Time } from '../core/time';\r\nimport { SceneManager } from '../core/scene-manager';\r\nimport { Configuration } from '../core/configuration';\r\nimport { SystemManager } from '../core/system-manager';\r\nimport { ManagerFactory } from '../core/manager-factory';\r\n\r\nimport { CollisionSystem } from '../systems/collision/collision-system';\r\n\r\nimport { Manifest } from '../scene/manifest';\r\n\r\nimport { ScriptSystem } from '../systems/script/ScriptSystem';\r\nimport { LoadSceneReturn } from '../models/returns/load-scene-return';\r\n\r\n// Renderers implementations.\r\nimport { BaseRenderer } from '../graphics/renderer/base-renderer';\r\nimport { WebGLRenderer } from '../graphics/renderer/webgl-renderer';\r\nimport { CanvasRenderer } from '../graphics/renderer/canvas-renderer';\r\n\r\n// Loggin.\r\nimport { Logger } from '../logging/logger';\r\n\r\nexport abstract class Application {\r\n    /**\r\n     * Contains the rendering functionality from the main loop.\r\n     */\r\n    public renderer!: BaseRenderer; \r\n\r\n    /**\r\n     * Flag that determines what renderer will be used.\r\n     */\r\n    public type: string | 'webgl' | 'canvas' = 'canvas';\r\n\r\n    /**\r\n     * The main input system.\r\n     */\r\n    // public input: Input;\r\n\r\n    /**\r\n     * Added to\r\n     */\r\n    abstract onStart(): void;\r\n\r\n    /**\r\n     * The main constructor.\r\n     */\r\n    constructor() {\r\n        // Register systems.\r\n        SystemManager.register(new CollisionSystem());\r\n        SystemManager.register(new ScriptSystem());\r\n\r\n        // Map component manager instance to component types.\r\n        ManagerFactory.bootstrap();\r\n\r\n        Logger.info(`Registered ${ManagerFactory.managers.size} manager(s)`, Application.name);\r\n        Logger.data('Registered manager(s)', ManagerFactory.managers);\r\n    }\r\n\r\n    /**\r\n     * Actually begins the game instance. Processes the configuration.\r\n     * \r\n     * @author NSSure\r\n     * @since 11/8/2020\r\n     */\r\n    public async init(): Promise<void> {\r\n        Logger.info('[Started initializing application]', Application.name);\r\n\r\n        let engineConfigPath: string = 'manifest.json';\r\n\r\n        // Determines what base url to use for loading application resources (tileset, configurations, etc).\r\n        const urlParams = new URLSearchParams(location.search);\r\n\r\n        // Used in the editor.\r\n        if (urlParams.has('baseUrl')) {\r\n            Configuration.baseUrl = decodeURIComponent(urlParams.get('baseUrl')!);\r\n            engineConfigPath = `${Configuration.baseUrl}/${engineConfigPath}`;\r\n        }\r\n\r\n        // Load engine configuration.\r\n        let engineConfig: Manifest = await (await fetch(engineConfigPath).catch(this.handleLoadError)).json();\r\n\r\n        // Load the first scene and init the renderer with the default scene and tilesets.\r\n        SceneManager.load(engineConfig.scenes[0]).then((loadSceneRtn: LoadSceneReturn) => {\r\n            if (this.type === 'webgl') {\r\n                this.renderer = new WebGLRenderer(loadSceneRtn.scene, loadSceneRtn.tilesets);\r\n            }\r\n            else {\r\n                this.renderer = new CanvasRenderer(loadSceneRtn.scene, loadSceneRtn.tilesets);\r\n            }\r\n    \r\n            this.renderer.init();\r\n    \r\n            this.onStart();\r\n            \r\n            // Start the main application loop.\r\n            window.requestAnimationFrame((time: number) => this.mainLoop(time));\r\n        });\r\n    }\r\n\r\n    private handleLoadError(response: any): Response {\r\n        console.warn(response);\r\n\r\n        return new Response(JSON.stringify({\r\n            code: 500,\r\n            message: response.error\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * The main loop contains all the rendering logic will be called from within this function.\r\n     * \r\n     * @param time The time between the animation frames.\r\n     * \r\n     * @author NSSure\r\n     * @since 11/8/2020\r\n     */\r\n    private mainLoop(time: number) {\r\n        // Update peripheral data (time, mouse, etc) for use within the render systems.\r\n        Time.calculateDeltaTime(time);\r\n        // Mouse.update(this.renderer.mousePosition);\r\n\r\n        // Iterate through any registered systems and execute the update method for each system.\r\n        // SystemManager.systems.forEach((system: any) => {\r\n        //     system.update();\r\n        // });\r\n\r\n        // Execute the draw method within the renderer.\r\n        this.renderer.draw();\r\n\r\n        // Request a new animation frame.\r\n        window.requestAnimationFrame((time: number) => this.mainLoop(time));\r\n    }\r\n}","import { TagComponent } from '../scene/components';\r\nimport { TransformComponent } from '../scene/components';\r\nimport { SpriteRendererComponent } from '../scene/components';\r\nimport { MaterialComponent } from '../scene/components';\r\nimport { ColliderComponent } from '../scene/components';\r\nimport { CameraComponent } from '../scene/components';\r\nimport { ImageComponent } from '../scene/components';\r\nimport { ScriptComponent } from '../scene/components';\r\n\r\nexport class YakConstants {\r\n    /**\r\n     * The types of all of the available components.\r\n     */\r\n    public static componentTypes: any[] = [\r\n        TagComponent,\r\n        TransformComponent,\r\n        SpriteRendererComponent,\r\n        MaterialComponent,\r\n        ColliderComponent,\r\n        CameraComponent,\r\n        ImageComponent,\r\n        ScriptComponent\r\n    ];\r\n}","import { Time } from '../core/time';\r\n\r\n/**\r\n * Tracks keyboard input only. For mouse input use Mouse.\r\n */\r\nexport class Input {\r\n    public static codes: Map<string, boolean> = new Map();\r\n\r\n    constructor() {\r\n        window.addEventListener('keydown', (event) => this._onKeyDown(event));\r\n        window.addEventListener('keyup', (event) => this._onKeyUp(event));\r\n    }\r\n\r\n    private _onKeyDown(event: KeyboardEvent): void {\r\n        Input.codes.set(event.code.toLowerCase(), true);\r\n    }\r\n\r\n    private _onKeyUp(event: KeyboardEvent): void {\r\n        if (Input.codes.has(event.code.toLowerCase())) {\r\n            Input.codes.set(event.code.toLowerCase(), false);\r\n        }\r\n    }\r\n\r\n    public static isPressed(code: string): boolean {\r\n        return Input.codes.has(code.toLowerCase());\r\n    }\r\n\r\n    public static horizontal(): number {\r\n        let xDirection: number;\r\n\r\n        if (Input.isPressed('keya'))\r\n        {\r\n            xDirection = -1;\r\n        }\r\n        else if (Input.isPressed('keyd'))\r\n        {\r\n            xDirection = 1;\r\n        }\r\n        else {\r\n            xDirection = 0;\r\n        }\r\n\r\n        return xDirection;\r\n    }\r\n\r\n    public static vertical(): number {\r\n        let yDirection;\r\n\r\n        if (Input.isPressed('keyw'))\r\n        {\r\n            yDirection = -1;\r\n        }\r\n        else if (Input.isPressed('keys'))\r\n        {\r\n            yDirection = 1;\r\n        }\r\n        else {\r\n            yDirection = 0;\r\n        }\r\n\r\n        return yDirection * Time.deltaTime;\r\n    }\r\n}","/**\r\n * Contains information related to the render layer.\r\n */\r\nexport class Layer {\r\n    constructor(\r\n        public name?: string,\r\n        public enabled?: boolean,\r\n        public locked?: boolean,\r\n        public order?: number\r\n    ) {\r\n\r\n    }\r\n}","export default class Mat3 {\r\n\tconstructor() {}\r\n\r\n\tpublic static identity(): number[] {\r\n\t\treturn [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\t}\r\n\r\n\tpublic static projection(width: number, height: number): number[] {\r\n\t\treturn [2 / width, 0, 0, 0, -2 / height, 0, -1, 1, 1];\r\n\t}\r\n\r\n\tpublic static translation(translateX: number, translateY: number): number[] {\r\n\t\tlet x: number = translateX;\r\n\t\tlet y: number = translateY;\r\n\r\n\t\treturn [1, 0, 0, 0, 1, 0, x, y, 1];\r\n\t}\r\n\r\n\tpublic static rotation(angleInRadians: number): number[] {\r\n\t\tlet c: number = Math.cos(angleInRadians);\r\n\t\tlet s: number = Math.sin(angleInRadians);\r\n\r\n\t\treturn [c, -s, 0, s, c, 0, 0, 0, 1];\r\n\t}\r\n\r\n\tpublic static scaling(scaleX: number, scaleY: number): number[] {\r\n\t\tlet x: number = scaleX;\r\n\t\tlet y: number = scaleY;\r\n\r\n\t\treturn [x, 0, 0, 0, y, 0, 0, 0, 1];\r\n\t}\r\n\r\n\tpublic static multiply(a: any, b: any): number[] {\r\n\t\tvar a00 = a[0 * 3 + 0];\r\n\t\tvar a01 = a[0 * 3 + 1];\r\n\t\tvar a02 = a[0 * 3 + 2];\r\n\t\tvar a10 = a[1 * 3 + 0];\r\n\t\tvar a11 = a[1 * 3 + 1];\r\n\t\tvar a12 = a[1 * 3 + 2];\r\n\t\tvar a20 = a[2 * 3 + 0];\r\n\t\tvar a21 = a[2 * 3 + 1];\r\n\t\tvar a22 = a[2 * 3 + 2];\r\n\t\tvar b00 = b[0 * 3 + 0];\r\n\t\tvar b01 = b[0 * 3 + 1];\r\n\t\tvar b02 = b[0 * 3 + 2];\r\n\t\tvar b10 = b[1 * 3 + 0];\r\n\t\tvar b11 = b[1 * 3 + 1];\r\n\t\tvar b12 = b[1 * 3 + 2];\r\n\t\tvar b20 = b[2 * 3 + 0];\r\n\t\tvar b21 = b[2 * 3 + 1];\r\n\t\tvar b22 = b[2 * 3 + 2];\r\n\r\n\t\treturn [b00 * a00 + b01 * a10 + b02 * a20, b00 * a01 + b01 * a11 + b02 * a21, b00 * a02 + b01 * a12 + b02 * a22, b10 * a00 + b11 * a10 + b12 * a20, b10 * a01 + b11 * a11 + b12 * a21, b10 * a02 + b11 * a12 + b12 * a22, b20 * a00 + b21 * a10 + b22 * a20, b20 * a01 + b21 * a11 + b22 * a21, b20 * a02 + b21 * a12 + b22 * a22];\r\n\t}\r\n\r\n\tpublic static translate(matrix: number[], translateX: number, translateY: number): number[] {\r\n\t\treturn Mat3.multiply(matrix, Mat3.translation(translateX, translateY));\r\n\t}\r\n\r\n\tpublic static rotate(matrix: number[], angleInRadians: number): number[] {\r\n\t\treturn Mat3.multiply(matrix, Mat3.rotation(angleInRadians));\r\n    }\r\n    \r\n    public static scale(matrix: number[], scaleX: number, scaleY: number): number[] {\r\n        return Mat3.multiply(matrix, Mat3.scaling(scaleX, scaleY));\r\n    }\r\n}\r\n","import { Point } from '../primitives/point';\r\n\r\n/**\r\n * Tracks mouse input only. For keyboard input use Input.\r\n */\r\nexport class Mouse {\r\n    public static buttons: Map<number, boolean> = new Map();\r\n\r\n    public static xDiff: number = 0;\r\n\r\n    public static yDiff: number = 0;\r\n\r\n    public static lastMousePosition: Point | null = null;\r\n\r\n    constructor() {\r\n        window.addEventListener('mousedown', (event) => this.onMouseDown(event));\r\n        window.addEventListener('mouseup', (event) => this.onMouseUp(event));\r\n    }\r\n\r\n    onMouseDown(event: MouseEvent): void {\r\n        Mouse.buttons.set(event.button, true);\r\n    }\r\n\r\n    onMouseUp(event: MouseEvent): void {\r\n        if (Mouse.buttons.has(event.button)) {\r\n            Mouse.buttons.set(event.button, false);\r\n        }\r\n    }\r\n\r\n    static isPressed(button: number): boolean {\r\n        return Mouse.buttons.has(button);\r\n    }\r\n\r\n    static update(mousePosition: Point): void {\r\n        if (this.lastMousePosition) {\r\n            this.xDiff = mousePosition.x - this.lastMousePosition.x;\r\n            this.yDiff = mousePosition.y - this.lastMousePosition.y;\r\n        }\r\n\r\n        this.lastMousePosition = mousePosition;\r\n    }\r\n}","import { Transform } from '../primitives/transform';\r\n\r\nexport class Sprite {\r\n    constructor(\r\n        public transform: Transform,\r\n        public enabled: boolean,\r\n        public tileset?: number,\r\n        public tilesetTransform: Transform = Transform.empty\r\n    ) {\r\n\r\n    }\r\n}","import { Transform } from '../primitives/transform';\r\n\r\nexport function areTransformsEqual(sourceTransform: Transform, targetTransform: Transform): boolean {\r\n    return sourceTransform.x === targetTransform.x && sourceTransform.y === targetTransform.y && sourceTransform.width === targetTransform.width && sourceTransform.height === targetTransform.height;\r\n}","import { Point } from '../primitives/point';\r\nimport { Transform } from '../primitives/transform';\r\nimport { isCoordinateContained } from '../helpers/is-coordinate-contained';\r\n\r\nexport function areTransformsOverlapping(sourceTransform: Transform, targetTransform: Transform): boolean {\r\n    if (isCoordinateContained(new Point(sourceTransform.x, sourceTransform.y), targetTransform)) {\r\n        return true;\r\n    }\r\n\r\n    if (isCoordinateContained(new Point(sourceTransform.x + sourceTransform.width, sourceTransform.y), targetTransform)) {\r\n        return true;\r\n    }\r\n\r\n    if (isCoordinateContained(new Point(sourceTransform.x, sourceTransform.y + sourceTransform.height), targetTransform)) {\r\n        return true;\r\n    }\r\n\r\n    if (isCoordinateContained(new Point(sourceTransform.x + sourceTransform.width, sourceTransform.y + sourceTransform.height), targetTransform)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","import { Configuration } from '../core/configuration';\r\nimport { Point } from '../primitives/point';\r\n\r\nexport function pointWorldPosition(point: Point): Point {\r\n    let gridCoordinates = new Point(0, 0);\r\n    \r\n    gridCoordinates.x = Math.floor(point.x / Configuration.gridSquareSize);\r\n    gridCoordinates.y = Math.floor(point.y / Configuration.gridSquareSize);\r\n\r\n    return gridCoordinates;\r\n}","/**\r\n * Iterates the image data of the canvas to determine if the canvas\r\n * is empty or not.\r\n * @param canvas The canvas to check if it is empty.\r\n * \r\n * @author NSSure\r\n * @since 11/10/2020\r\n * \r\n * Ref - https://stackoverflow.com/questions/17386707/how-to-check-if-a-canvas-is-blank\r\n */\r\nexport function isCanvasBlank(canvas: HTMLCanvasElement) {\r\n    const context = canvas.getContext('2d');\r\n  \r\n    const pixelBuffer = new Uint32Array(\r\n      context!.getImageData(0, 0, canvas.width, canvas.height).data.buffer\r\n    );\r\n\r\n    return !pixelBuffer.some(color => color !== 0);\r\n  }","import { Transform } from '../primitives/transform';\r\n\r\n/**\r\n * Determines if a given transform object is empty. Meaning the x, y, width, and height\r\n * values are all zero.\r\n * \r\n * @param transform The transform to check if it is empty.\r\n * \r\n * @author NSSure\r\n * @since 11/12/2020\r\n */\r\nexport function isTransformEmpty(transform: Transform): boolean {\r\n    return transform.x === 0 && transform.y === 0 && transform.width === 0 && transform.height === 0\r\n}","import { Camera } from '../graphics/camera';\r\n\r\nexport function screenToWorld(camera: Camera, x: number, y: number) {\r\n    return {x: x + camera.viewport.x, y: y + camera.viewport.y};\r\n  }","import { Camera } from '../graphics/camera';\r\nimport { Point } from '../primitives/point';\r\n\r\nexport function worldToScreen(camera: Camera, x: number, y: number): Point {\r\n    return new Point(x - camera.viewport.x, y - camera.viewport.y);\r\n}","import { Logger } from '../../logging/logger';\r\nimport { Point } from '../../primitives/point';\r\nimport { Transform } from '../../primitives/transform';\r\nimport Collider from '../../physics/collision/collider';\r\n\r\nexport default class SquareCollider extends Collider {\r\n    points: Array<Point> = new Array();\r\n\r\n    constructor(transform: Transform) {\r\n        super(transform);\r\n\r\n        // this.transform = transform;\r\n\r\n        // Top left.\r\n        this.points.push(new Point(transform.x, transform.y));\r\n\r\n        // Top right.\r\n        this.points.push(new Point(transform.x + transform.width, transform.y));\r\n\r\n        // Bottom left.\r\n        this.points.push(new Point(transform.x, transform.y + transform.height));\r\n\r\n        // Bottom right.\r\n        this.points.push(new Point(transform.x + transform.width, transform.y + transform.height));\r\n    }\r\n\r\n    public onCollisionEnter(): void {\r\n        Logger.info('Square collider trigger enter', this.toString());\r\n    }\r\n\r\n    public onCollisionLeave(): void {\r\n        Logger.info('Square collider trigger leave', this.toString());\r\n    }\r\n}","import Collider from './collision/collider';\r\n\r\nexport default class Physics {\r\n    public static GRAVITATIONAL_CONSTANT: number = 9.8;\r\n    public static colliders: Array<Collider> = new Array();\r\n}","export class Manifest {\r\n    constructor(\r\n        public name: string,\r\n        public scenes: Array<string>\r\n    ) {\r\n        \r\n    }\r\n}","import { Layer } from '../graphics/layer';\r\n\r\nexport class Scene {\r\n    constructor(\r\n        public name: string,\r\n        public rows: number,\r\n        public columns: number,\r\n        public tileSize: number,\r\n        public tilesets: Array<string> = [],\r\n        public tilemap: any = {},\r\n        public entities: Array<any> = [],\r\n        public layers: Array<Layer> = [],\r\n        public entityManifests: Array<any> = []\r\n        ) {\r\n    }\r\n}","export default class StateManager {\r\n    public static data: Map<string, any> = new Map<string, any>();\r\n\r\n    public static commit<TType>(key: string, value: TType) {\r\n        StateManager.data.set(key, value);\r\n    }\r\n\r\n    public static get<TType>(key: string) {\r\n        if (StateManager.data.has(key)) {\r\n            return <TType>StateManager.data.get(key);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static exists(key: string): boolean {\r\n        return StateManager.data.has(key);\r\n    }\r\n\r\n    public static delete(key: string): void {\r\n        if (StateManager.data.has(key)) {\r\n            StateManager.data.delete(key)\r\n        }\r\n    }\r\n}","import { Entity } from '../../scene/entity';\r\n\r\n/**\r\n * User inherits this on the script classes.\r\n */\r\nexport class ScriptableEntity {\r\n    /**\r\n     * Gets set by the script system when instantiating the scriptable entity.\r\n     */\r\n    public entity!: Entity;\r\n\r\n    /**\r\n     * Executed when the script instance is created.\r\n     */\r\n    public onCreate(): string | void {};\r\n\r\n    /**\r\n     * Executed every iteration of the main loop.\r\n     */\r\n    public update(): string | void {};\r\n\r\n    /**\r\n     * Fires when the entity has a trigger collider and interacts with another collider.\r\n     * @param entity The entity that fired the enter trigger.\r\n     */\r\n    public onTriggerEnter(entity: Entity): void {};\r\n\r\n    /**\r\n     * Fires when the entity has a trigger collider and interacts with another collider.\r\n     * @param entity The entity the fire the leave trigger.\r\n     */\r\n    public onTriggerLeave(entity: Entity): void {};\r\n\r\n    /**\r\n     * Fires when the entity has a trigger collider and interacts with another collider.\r\n     * @param entity The entity that fired the stay trigger.\r\n     */\r\n    public onTriggerStay(entity: Entity): void {};\r\n\r\n    /**\r\n     * Adds a new component to the entity associated with the script.\r\n     * @param component The component to add to the entity.\r\n     */\r\n    public addComponent(component: any): void {\r\n        this.entity.addComponent(component);\r\n    }\r\n\r\n    /**\r\n     * Gets a component of the specified type from the entity associated with the script. If no component is found then\r\n     * null will be return.\r\n     * \r\n     * @param componentType The component type to get from the entity.\r\n     * @returns The instance of the component.\r\n     */\r\n    public getComponent<TComponent>(componentType: any): TComponent {\r\n        return this.entity.getComponent(componentType) as TComponent;\r\n    }\r\n}"],"sourceRoot":""}